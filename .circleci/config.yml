version: 2.1

orbs:
  node: circleci/node@5.0.2
  serverless-framework: circleci/serverless-framework@2.0

commands:
  check_env_var:
    description: checking environment variables
    steps:
      - run: |
          echo checking environment variables
          echo MY_ENV is $MY_ENV
          echo MY_REGION is $MY_REGION
          echo BRANCH_NAME is $BRANCH_NAME
  setup_serverless:
    description: setup serverless
    steps:
      - node/install:
          node-version: "16.13"
      - run: node --version
      - run: npm ci
      - run:
          name: install serverless framework
          command: npm install -g serverless
  install_plugin:
    description: install serverless plugin
    steps:
      - run:
          name: install serverless plugins
          command: 'sls plugin install --name serverless-python-requirements --stage=$MY_ENV'
  authenticate_serverless:
    description: authenticate serverles
    steps:
      - run:
          name: authenticate serverless
          command: 'sls config credentials --provider aws --key $AWS_ACCESS_KEY_ID --secret $AWS_SECRET_ACCESS_KEY'
  build_pkg:
    description: build serverless package
    steps:
      - run:
          name: build lambda package
          command: 'sls package --package lambda_pkg --stage=$MY_ENV --verbose'
  deploy_pkg:
    description: deploy lambda package
    steps:
      - run: 'sls deploy ./lambda_pkg --stage=$MY_ENV --verbose'
  test_pkg:
    description: test lambda package locally
    steps: 
      - run: |
          response=$(sls invoke local -f emailer -d '<< parameters.test_data >>')
          echo $response
          if [[ $"response" -ne 200 ]]; then exit 1; else exit 0; fi
    parameters:
      test_data:
        default: '{"emailId": "mohitlakshya@gmail.com"}'
        type: string
  start_docker:
    description: start docker service
    steps: 
      - run: systemctl start docker
    

executors:
  base-image:
    docker:
      - image: cimg/base:stable
    resource_class: small

jobs:
  develop:
    executor: base-image
    environment:
      MY_ENV: test
      MY_REGION: ap-south-1
      BRANCH_NAME: develop
    steps:
      - checkout
      - serverless-framework/setup
      - check_env_var
      - install_plugin
      - authenticate_serverless
      - build_pkg
      - test_pkg
      - deploy_pkg
  master:
    executor: base-image
    environment:
      MY_ENV: prod
      MY_REGION: us-west-2
      BRANCH_NAME: master
    steps:
      - checkout
      - serverless-framework/setup
      - check_env_var
      - install_plugin
      - authenticate_serverless
      - build_pkg
      - deploy_pkg
  feature:
    executor: base-image
    environment:
      MY_ENV: test
      MY_REGION: ap-south-1
      BRANCH_NAME: develop
    steps:
      - checkout
      - serverless-framework/setup
      - check_env_var
      - install_plugin
      - authenticate_serverless
      - start_docker
      - build_pkg
      - test_pkg

workflows:
  serverless:
    jobs:
      - develop:
          context: aws
          filters:
            branches:
              only: develop
      - master:
          context: aws
          filters:
            branches:
              only: master
      - feature:
          context: aws
          filters:
            branches:
              ignore:
                - develop
                - master
